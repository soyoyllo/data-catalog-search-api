---
description: 사용자 명시적 지시사항 준수 가이드
globs: **/*
alwaysApply: true
---

# 사용자 명시적 지시사항 준수 가이드

## 🚨 절대 무시하면 안 되는 사용자 지시사항

### 1. **실행 금지 명령어**
사용자가 명시적으로 "실행하지마", "실행 금지", "하지마"라고 요청한 경우:

```bash
# ❌ 절대 실행하면 안 되는 경우
사용자: "uv sync 실행하지마"
AI: uv sync 실행 (❌ 잘못된 행동)

# ✅ 올바른 행동
사용자: "uv sync 실행하지마"  
AI: "네, uv sync는 실행하지 않겠습니다. 다른 방법으로 진행하겠습니다."
```

### 2. **단계별 확인 요청**
사용자가 "한번에 하지말고 단계별로", "확인하면서 진행"이라고 요청한 경우:

```bash
# ❌ 잘못된 방법
사용자: "단계별로 진행해줘"
AI: 모든 명령어를 한번에 실행 (❌ 잘못된 행동)

# ✅ 올바른 방법
사용자: "단계별로 진행해줘"
AI: "1단계: Git 초기화를 진행하겠습니다. 계속할까요?"
```

### 3. **특정 도구 사용 금지**
사용자가 특정 도구나 명령어 사용을 금지한 경우:

```bash
# 사용자: "pytest 필요없으니 그냥 필수 환경만 셋팅해"
# AI: pytest 관련 설정을 모두 제거하고 필수 환경만 구성
```

## 📋 사용자 지시사항 준수 체크리스트

### 명령어 실행 전 확인사항
- [ ] 사용자가 "실행하지마"라고 명시적으로 요청했는가?
- [ ] 사용자가 특정 도구 사용을 금지했는가?
- [ ] 사용자가 단계별 진행을 요청했는가?
- [ ] 사용자가 다른 방법을 제안했는가?

### 사용자 요청 해석 가이드

#### 명확한 금지 명령어
- "실행하지마" → 절대 실행 금지
- "하지마" → 해당 작업 중단
- "필요없어" → 해당 기능 제거
- "간단하게만" → 복잡한 기능 제거

#### 단계별 진행 요청
- "단계별로" → 한 번에 하나씩 실행
- "확인하면서" → 각 단계마다 사용자 확인
- "차근차근" → 천천히 진행

#### 간소화 요청
- "간단하게만" → 최소한의 기능만 구현
- "필수만" → 핵심 기능만 유지
- "복잡하지 말고" → 단순한 구조로 구성

## 🔧 올바른 응답 패턴

### 실행 금지 요청 시
```markdown
사용자: "uv run pytest 실행하지마"
AI: "네, pytest는 실행하지 않겠습니다. 
     대신 [다른 방법]을 제안드리겠습니다."
```

### 단계별 진행 요청 시
```markdown
사용자: "단계별로 진행해줘"
AI: "1단계: [작업명]을 진행하겠습니다.
     진행해도 될까요? (y/n)"
```

### 간소화 요청 시
```markdown
사용자: "간단하게만 해줘"
AI: "네, 복잡한 기능들을 제거하고 
     핵심 기능만 구현하겠습니다."
```

## ⚠️ 주의사항

1. **사용자의 명시적 지시사항은 절대 무시하지 말 것**
2. **불확실한 경우 사용자에게 다시 확인**
3. **사용자가 다른 방법을 제안하면 그 방법을 우선 고려**
4. **사용자의 의도를 정확히 파악하고 그에 맞게 행동**
5. **"실행하지마"는 가장 강력한 금지 명령어**

## 🎯 사용자 만족도 향상 방법

- **사용자 요청을 정확히 이해하고 그대로 실행**
- **불필요한 복잡성 추가하지 않기**
- **사용자가 원하는 수준의 단순함 유지**
- **명시적 지시사항을 100% 준수**